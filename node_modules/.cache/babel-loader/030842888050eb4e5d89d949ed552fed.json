{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\14047\\\\JJLZ_UI\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\14047\\\\JJLZ_UI\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\14047\\\\JJLZ_UI\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\14047\\\\JJLZ_UI\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\14047\\\\JJLZ_UI\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\14047\\\\JJLZ_UI\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\14047\\\\JJLZ_UI\\\\src\\\\components\\\\todo\\\\AutoCompleteText.js\";\nimport React from \"react\";\nimport './AutoCompleteText.css';\n\nvar AutoCompleteText =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AutoCompleteText, _React$Component);\n\n  function AutoCompleteText(props) {\n    var _this;\n\n    _classCallCheck(this, AutoCompleteText);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AutoCompleteText).call(this, props));\n\n    _this.onTextChanged = function (e) {\n      var items = _this.props.items;\n      var value = e.target.value;\n      var suggestions = [];\n\n      if (value.length > 0) {\n        var regex = new RegExp(\"^\".concat(value), 'i');\n        suggestions = items.sort().filter(function (v) {\n          return regex.test(v);\n        });\n      }\n\n      _this.setState(function () {\n        return {\n          suggestions: suggestions,\n          text: value\n        };\n      });\n    };\n\n    _this.state = {\n      suggestions: [],\n      text: ''\n    };\n    return _this;\n  }\n\n  _createClass(AutoCompleteText, [{\n    key: \"suggestionSelected\",\n    value: function suggestionSelected(value) {\n      this.setState(function () {\n        return {\n          text: value,\n          suggestions: []\n        };\n      });\n    }\n  }, {\n    key: \"renderSuggestions\",\n    value: function renderSuggestions() {\n      var _this2 = this;\n\n      var suggestions = this.state.suggestions;\n\n      if (suggestions.length === 0) {\n        return null;\n      }\n\n      return React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, suggestions.map(function (item) {\n        return React.createElement(\"li\", {\n          onClick: function onClick() {\n            return _this2.suggestionSelected(item);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, item);\n      }));\n    }\n  }, {\n    key: \"getData\",\n    value: function getData(val) {\n      console.warn(val);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _React$createElement;\n\n      var text = this.state.text;\n      return React.createElement(\"div\", {\n        className: \"AutoCompleteText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"input\", (_React$createElement = {\n        value: text,\n        onChange: this.onTextChanged\n      }, _defineProperty(_React$createElement, \"onChange\", getData), _defineProperty(_React$createElement, \"type\", \"text\"), _defineProperty(_React$createElement, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      }), _defineProperty(_React$createElement, \"__self\", this), _React$createElement)), this.renderSuggestions());\n    }\n  }]);\n\n  return AutoCompleteText;\n}(React.Component);\n\nexport { AutoCompleteText as default };","map":{"version":3,"sources":["C:\\Users\\14047\\JJLZ_UI\\src\\components\\todo\\AutoCompleteText.js"],"names":["React","AutoCompleteText","props","onTextChanged","e","items","value","target","suggestions","length","regex","RegExp","sort","filter","v","test","setState","text","state","map","item","suggestionSelected","val","console","warn","getData","renderSuggestions","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,wBAAP;;IACqBC,gB;;;;;AACjB,4BAAaC,KAAb,EAAmB;AAAA;;AAAA;;AACf,0FAAMA,KAAN;;AADe,UAQnBC,aARmB,GAQH,UAACC,CAAD,EAAM;AAAA,UACVC,KADU,GACA,MAAKH,KADL,CACVG,KADU;AAElB,UAAMC,KAAK,GAAGF,CAAC,CAACG,MAAF,CAASD,KAAvB;AAEA,UAAIE,WAAW,GAAE,EAAjB;;AACA,UAAGF,KAAK,CAACG,MAAN,GAAc,CAAjB,EAAmB;AACd,YAAMC,KAAK,GAAG,IAAIC,MAAJ,YAAeL,KAAf,GAAuB,GAAvB,CAAd;AACAE,QAAAA,WAAW,GAAGH,KAAK,CAACO,IAAN,GAAaC,MAAb,CAAoB,UAAAC,CAAC;AAAA,iBAAIJ,KAAK,CAACK,IAAN,CAAWD,CAAX,CAAJ;AAAA,SAArB,CAAd;AACZ;;AACW,YAAKE,QAAL,CAAc;AAAA,eAAO;AAAER,UAAAA,WAAW,EAAXA,WAAF;AAAeS,UAAAA,IAAI,EAAEX;AAArB,SAAP;AAAA,OAAd;AAEP,KAnBkB;;AAEf,UAAKY,KAAL,GAAa;AACTV,MAAAA,WAAW,EAAE,EADJ;AAETS,MAAAA,IAAI,EAAE;AAFG,KAAb;AAFe;AAMlB;;;;uCAemBX,K,EAAO;AACvB,WAAKU,QAAL,CAAc;AAAA,eAAM;AAChBC,UAAAA,IAAI,EAAEX,KADU;AAEhBE,UAAAA,WAAW,EAAE;AAFG,SAAN;AAAA,OAAd;AAIH;;;wCAEoB;AAAA;;AAAA,UACTA,WADS,GACO,KAAKU,KADZ,CACTV,WADS;;AAEjB,UAAIA,WAAW,CAACC,MAAZ,KAAuB,CAA3B,EAA6B;AACzB,eAAO,IAAP;AACH;;AACD,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKD,WAAW,CAACW,GAAZ,CAAgB,UAACC,IAAD;AAAA,eAAU;AAAI,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACC,kBAAL,CAAwBD,IAAxB,CAAN;AAAA,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAmDA,IAAnD,CAAV;AAAA,OAAhB,CADL,CADJ;AAKH;;;4BACOE,G,EAAI;AACRC,MAAAA,OAAO,CAACC,IAAR,CAAaF,GAAb;AACH;;;6BAEO;AAAA;;AAAA,UACIL,IADJ,GACa,KAAKC,KADlB,CACID,IADJ;AAEJ,aACI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,KAAK,EAAGA,IAAf;AAAqB,QAAA,QAAQ,EAAE,KAAKd;AAApC,2DAA8DsB,OAA9D,iDAA4E,MAA5E;AAAA;AAAA;AAAA,uFADJ,EAEK,KAAKC,iBAAL,EAFL,CADJ;AAMH;;;;EApDyC1B,KAAK,CAAC2B,S;;SAA/B1B,gB","sourcesContent":["import React from \"react\";\r\nimport './AutoCompleteText.css';\r\nexport default class AutoCompleteText extends React.Component{\r\n    constructor (props){\r\n        super(props);\r\n        this.state = {\r\n            suggestions: [],\r\n            text: '',\r\n        };\r\n    }\r\n\r\n    onTextChanged = (e) =>{\r\n        const { items } = this.props;\r\n        const value = e.target.value;\r\n        \r\n        let suggestions =[];\r\n        if(value.length >0){\r\n             const regex = new RegExp(`^${value}`,'i');\r\n             suggestions = items.sort().filter(v => regex.test(v));\r\n}\r\n            this.setState(() => ({ suggestions, text: value }));\r\n        \r\n    }\r\n\r\n    suggestionSelected (value) {\r\n        this.setState(() =>({\r\n            text: value,\r\n            suggestions: [],\r\n        }))\r\n    }\r\n\r\n    renderSuggestions () {\r\n        const { suggestions } = this.state;\r\n        if (suggestions.length === 0){\r\n            return null;\r\n        }\r\n        return (\r\n            <ul>\r\n                {suggestions.map((item) => <li onClick={() => this.suggestionSelected(item)}>{item}</li>)}\r\n            </ul>\r\n        );\r\n    }\r\n    getData(val){\r\n        console.warn(val)\r\n    }\r\n\r\n    render(){\r\n        const { text } = this.state;\r\n        return (\r\n            <div className=\"AutoCompleteText\">\r\n                <input value= {text} onChange={this.onTextChanged}  onChange={getData} type=\"text\" />\r\n                {this.renderSuggestions()}\r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}