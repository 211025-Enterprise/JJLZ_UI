{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\zdn_8\\\\Desktop\\\\JJLZ_UI\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\zdn_8\\\\Desktop\\\\JJLZ_UI\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\nvar AuthenticationService =\n/*#__PURE__*/\nfunction () {\n  function AuthenticationService() {\n    _classCallCheck(this, AuthenticationService);\n  }\n\n  _createClass(AuthenticationService, [{\n    key: \"registerSuccessfulLogin\",\n    value: function registerSuccessfulLogin(username, password) {\n      // console.log('registerSuccessfulLogin')\n      sessionStorage.setItem('authenticatedUser', username);\n    }\n  }, {\n    key: \"logout\",\n    value: function logout() {\n      sessionStorage.removeItem('authenticatedUser');\n    }\n  }, {\n    key: \"isUserLoggedIn\",\n    value: function isUserLoggedIn() {\n      var user = sessionStorage.getItem('authenticatedUser');\n      if (user === null) return false;\n      return true;\n    } // executeBasicAuthenticationService(username, password) {\n    //     return axios.get('http://localhost:8080/basicauth', \n    //         {headers: {authorization: this.createBasicAuthToken(username,password)}})\n    // }\n    // createBasicAuthToken(username,password) {\n    //     return 'Basic ' +  window.btoa(username + \":\" + password)\n    // }\n    // registerSuccessfulLogin(username,password){\n    //     //let basicAuthHeader = 'Basic ' +  window.btoa(username + \":\" + password)\n    //     //console.log('registerSuccessfulLogin')\n    //     sessionStorage.setItem('authenticatedUser', username)\n    //     this.setupAxiosInterceptors(this.createBasicAuthToken(username,password))\n    // }\n    // logout() {\n    //     sessionStorage.removeItem('authenticatedUser');\n    // }\n    // isUserLoggedIn() {\n    //     let user = sessionStorage.getItem('authenticatedUser')\n    //     if(user===null) return false\n    //     return true\n    // }\n    // getLoggedInUserName() {\n    //     let user = sessionStorage.getItem('authenticatedUser')\n    //     if(user===null) return ''\n    //     return user\n    // }\n    // setupAxiosInterceptors(basicAuthHeader) {\n    //     axios.interceptors.request.use(\n    //         (config) => {\n    //             if(this.isUserLoggedIn()) {\n    //                 config.headers.authorization = basicAuthHeader\n    //             }\n    //             return config\n    //         }\n    //     )\n    // }\n\n  }]);\n\n  return AuthenticationService;\n}();\n\nexport default new AuthenticationService();","map":{"version":3,"sources":["C:\\Users\\zdn_8\\Desktop\\JJLZ_UI\\src\\components\\todo\\AuthenticationService.js"],"names":["AuthenticationService","username","password","sessionStorage","setItem","removeItem","user","getItem"],"mappings":";;;IAAMA,qB;;;;;;;;;4CAEsBC,Q,EAASC,Q,EAAS;AACvC;AACCC,MAAAA,cAAc,CAACC,OAAf,CAAuB,mBAAvB,EAA4CH,QAA5C;AACH;;;6BAEQ;AACLE,MAAAA,cAAc,CAACE,UAAf,CAA0B,mBAA1B;AACH;;;qCAEgB;AACb,UAAIC,IAAI,GAAGH,cAAc,CAACI,OAAf,CAAuB,mBAAvB,CAAX;AACA,UAAGD,IAAI,KAAK,IAAZ,EAAkB,OAAO,KAAP;AAClB,aAAO,IAAP;AACH,K,CAID;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAGJ,eAAe,IAAIN,qBAAJ,EAAf","sourcesContent":["class AuthenticationService {\n\n    registerSuccessfulLogin(username,password){\n       // console.log('registerSuccessfulLogin')\n        sessionStorage.setItem('authenticatedUser', username);\n    }\n\n    logout() {\n        sessionStorage.removeItem('authenticatedUser');\n    }\n\n    isUserLoggedIn() {\n        let user = sessionStorage.getItem('authenticatedUser')\n        if(user === null) return false\n        return true\n    }\n\n\n\n    // executeBasicAuthenticationService(username, password) {\n    //     return axios.get('http://localhost:8080/basicauth', \n    //         {headers: {authorization: this.createBasicAuthToken(username,password)}})\n    // }\n\n    // createBasicAuthToken(username,password) {\n    //     return 'Basic ' +  window.btoa(username + \":\" + password)\n    // }\n\n    // registerSuccessfulLogin(username,password){\n    //     //let basicAuthHeader = 'Basic ' +  window.btoa(username + \":\" + password)\n    //     //console.log('registerSuccessfulLogin')\n    //     sessionStorage.setItem('authenticatedUser', username)\n    //     this.setupAxiosInterceptors(this.createBasicAuthToken(username,password))\n    // }\n\n    // logout() {\n    //     sessionStorage.removeItem('authenticatedUser');\n    // }\n\n    // isUserLoggedIn() {\n    //     let user = sessionStorage.getItem('authenticatedUser')\n    //     if(user===null) return false\n    //     return true\n    // }\n\n    // getLoggedInUserName() {\n    //     let user = sessionStorage.getItem('authenticatedUser')\n    //     if(user===null) return ''\n    //     return user\n    // }\n\n    // setupAxiosInterceptors(basicAuthHeader) {\n\n    //     axios.interceptors.request.use(\n    //         (config) => {\n    //             if(this.isUserLoggedIn()) {\n    //                 config.headers.authorization = basicAuthHeader\n    //             }\n    //             return config\n    //         }\n    //     )\n    // }\n}\n\nexport default new AuthenticationService()"]},"metadata":{},"sourceType":"module"}