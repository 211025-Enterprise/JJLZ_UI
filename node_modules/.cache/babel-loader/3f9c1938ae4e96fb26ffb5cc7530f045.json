{"ast":null,"code":"'use strict';\n/*\r\n * make a regex for matching counter ids/names ie xaxis, xaxis2, xaxis10...\r\n *\r\n * @param {string} head: the head of the pattern, eg 'x' matches 'x', 'x2', 'x10' etc.\r\n *      'xy' is a special case for cartesian subplots: it matches 'x2y3' etc\r\n * @param {Optional(string)} tail: a fixed piece after the id\r\n *      eg counterRegex('scene', '.annotations') for scene2.annotations etc.\r\n * @param {boolean} openEnded: if true, the string may continue past the match.\r\n * @param {boolean} matchBeginning: if false, the string may start before the match.\r\n */\n\nexports.counter = function (head, tail, openEnded, matchBeginning) {\n  var fullTail = (tail || '') + (openEnded ? '' : '$');\n  var startWithPrefix = matchBeginning === false ? '' : '^';\n\n  if (head === 'xy') {\n    return new RegExp(startWithPrefix + 'x([2-9]|[1-9][0-9]+)?y([2-9]|[1-9][0-9]+)?' + fullTail);\n  }\n\n  return new RegExp(startWithPrefix + head + '([2-9]|[1-9][0-9]+)?' + fullTail);\n};","map":null,"metadata":{},"sourceType":"script"}