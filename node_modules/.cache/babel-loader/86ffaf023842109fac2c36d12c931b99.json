{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\levan\\\\Documents\\\\JJLZ_UI\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\levan\\\\Documents\\\\JJLZ_UI\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\levan\\\\Documents\\\\JJLZ_UI\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\levan\\\\Documents\\\\JJLZ_UI\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\levan\\\\Documents\\\\JJLZ_UI\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\levan\\\\Documents\\\\JJLZ_UI\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\levan\\\\Documents\\\\JJLZ_UI\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\levan\\\\Documents\\\\JJLZ_UI\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\levan\\\\Documents\\\\JJLZ_UI\\\\src\\\\components\\\\todo\\\\StockComponent.jsx\";\nimport React, { Component } from 'react';\nimport Plot from 'react-plotly.js';\nimport SearchBar from './SearchBar';\n\nvar StockComponent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(StockComponent, _Component);\n\n  function StockComponent(props) {\n    var _this;\n\n    _classCallCheck(this, StockComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(StockComponent).call(this, props));\n    _this.componentDidMount =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              updateSearchText =\n              /*#__PURE__*/\n              function () {\n                var _ref2 = _asyncToGenerator(\n                /*#__PURE__*/\n                _regeneratorRuntime.mark(function _callee(text) {\n                  var sda;\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          _context.next = 2;\n                          return _this.setState({\n                            searchText: text\n                          });\n\n                        case 2:\n                          // setState behind scenes\n                          sda = text;\n                          console.log(sda);\n\n                        case 4:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }));\n\n                return function updateSearchText(_x) {\n                  return _ref2.apply(this, arguments);\n                };\n              }();\n\n              console.log('mounting');\n              console.log(_this.props.searchText);\n              _context2.next = 5;\n              return _this.fetchStock(_this.state.searchText);\n\n            case 5:\n              console.log(_this.state.searchText);\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    _this.fetchStock = function (text) {\n      var pointerToThis = _assertThisInitialized(_assertThisInitialized(_this));\n\n      console.log(pointerToThis);\n      var API_KEY = 'HGJWFG4N8AQ66ICD';\n      console.log(_this.state.searchText);\n      var StockSymbol = '';\n      StockSymbol = _this.state.searchText;\n      var API_Call = \"https://www.alphavantage.co/query?function=TIME_SERIES_DAILY_ADJUSTED&symbol=\".concat(StockSymbol, \"&outputsize=compact&apikey=\").concat(API_KEY);\n      var stockChartXValuesFunction = [];\n      var stockChartYValuesFunction = [];\n      fetch(API_Call).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        console.log(data);\n\n        for (var key in data['Time Series (Daily)']) {\n          stockChartXValuesFunction.push(key);\n          stockChartYValuesFunction.push(data['Time Series (Daily)'][key]['1. open']);\n        } // console.log(stockChartXValuesFunction);\n\n\n        pointerToThis.setState({\n          stockChartXValues: stockChartXValuesFunction,\n          stockChartYValues: stockChartYValuesFunction\n        });\n      });\n    };\n\n    _this.state = {\n      stockChartXValues: [],\n      stockChartYValues: [],\n      searchText: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(StockComponent, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(SearchBar, {\n        updateFunction: this.updateSearchText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), React.createElement(Plot, {\n        data: [{\n          x: this.state.stockChartXValues,\n          y: this.state.stockChartYValues,\n          type: 'scatter',\n          mode: 'lines+markers',\n          marker: {\n            color: 'blue'\n          }\n        }],\n        layout: {\n          width: 720,\n          height: 440,\n          title: 'alc'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return StockComponent;\n}(Component); // function SearchBar(){\n//   return (<form action=\"/stock\" method=\"get\" align=\"center\">\n//   <label htmlFor=\"header-search\">\n//       <span className=\"visually-hidden\" > Search Stock Name</span>\n//   </label>\n//   <input  type=\"text\"  id=\"header-search\"  placeholder=\"Enter Stock Name\"  name=\"s\" />\n//   <button type=\"submit\">Search</button>\n//   </form>)\n//   }\n\n\nexport default StockComponent;","map":{"version":3,"sources":["C:\\Users\\levan\\Documents\\JJLZ_UI\\src\\components\\todo\\StockComponent.jsx"],"names":["React","Component","Plot","SearchBar","StockComponent","props","componentDidMount","updateSearchText","text","setState","searchText","sda","console","log","fetchStock","state","pointerToThis","API_KEY","StockSymbol","API_Call","stockChartXValuesFunction","stockChartYValuesFunction","fetch","then","response","json","data","key","push","stockChartXValues","stockChartYValues","x","y","type","mode","marker","color","width","height","title"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport Plot from 'react-plotly.js';\r\nimport SearchBar from './SearchBar';\r\nclass StockComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      stockChartXValues: [],\r\n      stockChartYValues: [],\r\n      searchText: \"\"\r\n    }\r\n  }\r\n\r\n  \r\n\r\n  componentDidMount=async ()=> {\r\n    updateSearchText = async (text) =>{\r\n      await this.setState({searchText: text}) \r\n      // setState behind scenes\r\n      \r\n      var sda = text;\r\n      console.log(sda)\r\n    }\r\n    console.log('mounting')  \r\n    console.log(this.props.searchText)  \r\n    await this.fetchStock(this.state.searchText);\r\n    console.log(this.state.searchText);\r\n  }\r\n\r\n\r\n  fetchStock=(text) =>{\r\n    const pointerToThis = this;\r\n    console.log(pointerToThis);\r\n    const API_KEY = 'HGJWFG4N8AQ66ICD';\r\n    console.log(this.state.searchText)\r\n    let StockSymbol = '';\r\n    StockSymbol = this.state.searchText;\r\n    let API_Call = `https://www.alphavantage.co/query?function=TIME_SERIES_DAILY_ADJUSTED&symbol=${StockSymbol}&outputsize=compact&apikey=${API_KEY}`;\r\n    let stockChartXValuesFunction = [];\r\n    let stockChartYValuesFunction = [];\r\n\r\n    fetch(API_Call)\r\n      .then(\r\n        function(response) {\r\n          return response.json();\r\n        }\r\n      )\r\n      .then(\r\n        function(data) {\r\n          console.log(data);\r\n\r\n          for (var key in data['Time Series (Daily)']) {\r\n            stockChartXValuesFunction.push(key);\r\n            stockChartYValuesFunction.push(data['Time Series (Daily)'][key]['1. open']);\r\n          }\r\n\r\n          // console.log(stockChartXValuesFunction);\r\n          pointerToThis.setState({\r\n            stockChartXValues: stockChartXValuesFunction,\r\n            stockChartYValues: stockChartYValuesFunction\r\n          });\r\n        }\r\n      )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <SearchBar updateFunction={this.updateSearchText}/>\r\n        <Plot\r\n          data={[\r\n            {\r\n              x: this.state.stockChartXValues,\r\n              y: this.state.stockChartYValues,\r\n              type: 'scatter',\r\n              mode: 'lines+markers',\r\n              marker: {color: 'blue'},\r\n            }\r\n          ]}\r\n          layout={{width: 720, height: 440, title: 'alc'}}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n  \r\n}\r\n// function SearchBar(){\r\n\r\n//   return (<form action=\"/stock\" method=\"get\" align=\"center\">\r\n//   <label htmlFor=\"header-search\">\r\n//       <span className=\"visually-hidden\" > Search Stock Name</span>\r\n//   </label>\r\n//   <input  type=\"text\"  id=\"header-search\"  placeholder=\"Enter Stock Name\"  name=\"s\" />\r\n//   <button type=\"submit\">Search</button>\r\n//   </form>)\r\n//   }\r\nexport default StockComponent;"]},"metadata":{},"sourceType":"module"}